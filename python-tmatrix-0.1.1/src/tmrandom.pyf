q!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module _tmrandom ! in 
    interface  ! in :_tmrandom
        subroutine tmrandom(axi,rat,lam,mrr,mri,eps,epse,np,ddelt,ndgs,cextin,cscat,asymm,errcode) ! in :_tmrandom:tmd.lp.f
            real*8 :: axi
            real*8 :: rat
            real*8 :: lam
            real*8 :: mrr
            real*8 :: mri
            real*8 :: eps
            real*8 :: eps
            integer :: np
            real*8 :: ddelt
            integer :: ndgs
            real*8, intent(out) :: cextin
            real*8, intent(out) :: cscat
            real*8, intent(out) :: asymm
            integer, intent(out) :: errcode
            real*4 dimension(81,80,80) :: rt11
            real*4 dimension(81,80,80) :: rt12
            real*4 dimension(81,80,80) :: rt21
            real*4 dimension(81,80,80) :: rt22
            real*4 dimension(81,80,80) :: it11
            real*4 dimension(81,80,80) :: it12
            real*4 dimension(81,80,80) :: it21
            real*4 dimension(81,80,80) :: it22
            real*8 dimension(200,200) :: tr1
            real*8 dimension(200,200) :: ti1
            common /tmat/ rt11,rt12,rt21,rt22,it11,it12,it21,it22
            common /ct/ tr1,ti1
        end subroutine tmrandom
        subroutine vary(lam,mrr,mri,a,eps,np,ngauss,x,p,ppi,pir,pii,r,dr,ddr,drr,dri,nmax,errcode) ! in :_tmrandom:tmd.lp.f
            real*8 :: lam
            real*8 :: mrr
            real*8 :: mri
            real*8 :: a
            real*8 :: eps
            integer :: np
            integer :: ngauss
            real*8 dimension(600) :: x
            real*8 :: p
            real*8 :: ppi
            real*8 :: pir
            real*8 :: pii
            real*8 dimension(600) :: r
            real*8 dimension(600) :: dr
            real*8 dimension(600) :: ddr
            real*8 dimension(600) :: drr
            real*8 dimension(600) :: dri
            integer :: nmax
            integer :: errcode
            real*8 dimension(600,100) :: j
            real*8 dimension(600,100) :: y
            real*8 dimension(600,100) :: jr
            real*8 dimension(600,100) :: ji
            real*8 dimension(600,100) :: dj
            real*8 dimension(600,100) :: dy
            real*8 dimension(600,100) :: djr
            real*8 dimension(600,100) :: dji
            common /cbess/ j,y,jr,ji,dj,dy,djr,dji
        end subroutine vary
        subroutine rsp1(x,ng,ngauss,rev,eps,np,r,dr) ! in :_tmrandom:tmd.lp.f
            real*8 dimension(ng) :: x
            integer optional,check(len(x)>=ng),depend(x) :: ng=len(x)
            integer :: ngauss
            real*8 :: rev
            real*8 :: eps
            integer :: np
            real*8 dimension(ng),depend(ng) :: r
            real*8 dimension(ng),depend(ng) :: dr
        end subroutine rsp1
        subroutine rsp2(x,ng,rev,eps,n,r,dr) ! in :_tmrandom:tmd.lp.f
            real*8 dimension(ng) :: x
            integer optional,check(len(x)>=ng),depend(x) :: ng=len(x)
            real*8 :: rev
            real*8 :: eps
            integer :: n
            real*8 dimension(ng),depend(ng) :: r
            real*8 dimension(ng),depend(ng) :: dr
        end subroutine rsp2
        subroutine rsp3(x,ng,ngauss,rev,eps,r,dr) ! in :_tmrandom:tmd.lp.f
            real*8 dimension(ng) :: x
            integer optional,check(len(x)>=ng),depend(x) :: ng=len(x)
            integer :: ngauss
            real*8 :: rev
            real*8 :: eps
            real*8 dimension(ng),depend(ng) :: r
            real*8 dimension(ng),depend(ng) :: dr
        end subroutine rsp3
        subroutine bess(x,xr,xi,ng,nmax,nnmax1,nnmax2) ! in :_tmrandom:tmd.lp.f
            real*8 dimension(ng) :: x
            real*8 dimension(ng),depend(ng) :: xr
            real*8 dimension(ng),depend(ng) :: xi
            integer optional,check(len(x)>=ng),depend(x) :: ng=len(x)
            integer :: nmax
            integer :: nnmax1
            integer :: nnmax2
            real*8 dimension(600,100) :: j
            real*8 dimension(600,100) :: y
            real*8 dimension(600,100) :: jr
            real*8 dimension(600,100) :: ji
            real*8 dimension(600,100) :: dj
            real*8 dimension(600,100) :: dy
            real*8 dimension(600,100) :: djr
            real*8 dimension(600,100) :: dji
            common /cbess/ j,y,jr,ji,dj,dy,djr,dji
        end subroutine bess
        subroutine rjb(x,y,u,nmax,nnmax) ! in :_tmrandom:tmd.lp.f
            real*8 :: x
            real*8 dimension(nmax) :: y
            real*8 dimension(nmax),depend(nmax) :: u
            integer optional,check(len(y)>=nmax),depend(y) :: nmax=len(y)
            integer :: nnmax
        end subroutine rjb
        subroutine ryb(x,y,v,nmax) ! in :_tmrandom:tmd.lp.f
            real*8 :: x
            real*8 dimension(nmax) :: y
            real*8 dimension(nmax),depend(nmax) :: v
            integer optional,check(len(y)>=nmax),depend(y) :: nmax=len(y)
        end subroutine ryb
        subroutine cjb(xr,xi,yr,yi,ur,ui,nmax,nnmax) ! in :_tmrandom:tmd.lp.f
            real*8 :: xr
            real*8 :: xi
            real*8 dimension(nmax) :: yr
            real*8 dimension(nmax),depend(nmax) :: yi
            real*8 dimension(nmax),depend(nmax) :: ur
            real*8 dimension(nmax),depend(nmax) :: ui
            integer optional,check(len(yr)>=nmax),depend(yr) :: nmax=len(yr)
            integer :: nnmax
        end subroutine cjb
        subroutine tmatr0(ngauss,x,w,an,ann,s,ss,ppi,pir,pii,r,dr,ddr,drr,dri,nmax,ncheck) ! in :_tmrandom:tmd.lp.f
            integer :: ngauss
            real*8 dimension(600) :: x
            real*8 dimension(600) :: w
            real*8 dimension(100) :: an
            real*8 dimension(100,100) :: ann
            real*8 dimension(600) :: s
            real*8 dimension(600) :: ss
            real*8 :: ppi
            real*8 :: pir
            real*8 :: pii
            real*8 dimension(600) :: r
            real*8 dimension(600) :: dr
            real*8 dimension(600) :: ddr
            real*8 dimension(600) :: drr
            real*8 dimension(600) :: dri
            integer :: nmax
            integer :: ncheck
            real*8 dimension(200,200) :: qr
            real*8 dimension(200,200) :: qi
            real*8 dimension(200,200) :: rgqr
            real*8 dimension(200,200) :: rgqi
            real*8 dimension(600,100) :: j
            real*8 dimension(600,100) :: y
            real*8 dimension(600,100) :: jr
            real*8 dimension(600,100) :: ji
            real*8 dimension(600,100) :: dj
            real*8 dimension(600,100) :: dy
            real*8 dimension(600,100) :: djr
            real*8 dimension(600,100) :: dji
            real*4 dimension(51840 * npn4) :: plus
            real*8 dimension(100,100) :: r11
            real*8 dimension(100,100) :: r12
            real*8 dimension(100,100) :: r21
            real*8 dimension(100,100) :: r22
            real*8 dimension(100,100) :: i11
            real*8 dimension(100,100) :: i12
            real*8 dimension(100,100) :: i21
            real*8 dimension(100,100) :: i22
            real*8 dimension(100,100) :: rg11
            real*8 dimension(100,100) :: rg12
            real*8 dimension(100,100) :: rg21
            real*8 dimension(100,100) :: rg22
            real*8 dimension(100,100) :: ig11
            real*8 dimension(100,100) :: ig12
            real*8 dimension(100,100) :: ig21
            real*8 dimension(100,100) :: ig22
            real*8 dimension(200,200) :: tr1
            real*8 dimension(200,200) :: ti1
            common /ctt/ qr,qi,rgqr,rgqi
            common /cbess/ j,y,jr,ji,dj,dy,djr,dji
            common /tmat/ plus,r11,r12,r21,r22,i11,i12,i21,i22,rg11,rg12,rg21,rg22,ig11,ig12,ig21,ig22
            common /ct/ tr1,ti1
        end subroutine tmatr0
        subroutine tmatr(m,ngauss,x,w,an,ann,s,ss,ppi,pir,pii,r,dr,ddr,drr,dri,nmax,ncheck) ! in :_tmrandom:tmd.lp.f
            integer :: m
            integer :: ngauss
            real*8 dimension(600) :: x
            real*8 dimension(600) :: w
            real*8 dimension(100) :: an
            real*8 dimension(100,100) :: ann
            real*8 dimension(600) :: s
            real*8 dimension(600) :: ss
            real*8 :: ppi
            real*8 :: pir
            real*8 :: pii
            real*8 dimension(600) :: r
            real*8 dimension(600) :: dr
            real*8 dimension(600) :: ddr
            real*8 dimension(600) :: drr
            real*8 dimension(600) :: dri
            integer :: nmax
            integer :: ncheck
            real*8 dimension(200,200) :: qr
            real*8 dimension(200,200) :: qi
            real*8 dimension(200,200) :: rgqr
            real*8 dimension(200,200) :: rgqi
            real*8 dimension(600,100) :: j
            real*8 dimension(600,100) :: y
            real*8 dimension(600,100) :: jr
            real*8 dimension(600,100) :: ji
            real*8 dimension(600,100) :: dj
            real*8 dimension(600,100) :: dy
            real*8 dimension(600,100) :: djr
            real*8 dimension(600,100) :: dji
            real*4 dimension(51840 * npn4) :: plus
            real*8 dimension(100,100) :: r11
            real*8 dimension(100,100) :: r12
            real*8 dimension(100,100) :: r21
            real*8 dimension(100,100) :: r22
            real*8 dimension(100,100) :: i11
            real*8 dimension(100,100) :: i12
            real*8 dimension(100,100) :: i21
            real*8 dimension(100,100) :: i22
            real*8 dimension(100,100) :: rg11
            real*8 dimension(100,100) :: rg12
            real*8 dimension(100,100) :: rg21
            real*8 dimension(100,100) :: rg22
            real*8 dimension(100,100) :: ig11
            real*8 dimension(100,100) :: ig12
            real*8 dimension(100,100) :: ig21
            real*8 dimension(100,100) :: ig22
            real*8 dimension(200,200) :: tr1
            real*8 dimension(200,200) :: ti1
            common /ctt/ qr,qi,rgqr,rgqi
            common /cbess/ j,y,jr,ji,dj,dy,djr,dji
            common /tmat/ plus,r11,r12,r21,r22,i11,i12,i21,i22,rg11,rg12,rg21,rg22,ig11,ig12,ig21,ig22
            common /ct/ tr1,ti1
        end subroutine tmatr
        subroutine vig(x,nmax,m,dv1,dv2) ! in :_tmrandom:tmd.lp.f
            real*8 :: x
            integer :: nmax
            integer :: m
            real*8 dimension(100) :: dv1
            real*8 dimension(100) :: dv2
        end subroutine vig
        subroutine tt(nmax,ncheck) ! in :_tmrandom:tmd.lp.f
            integer :: nmax
            integer :: ncheck
            real*8 dimension(200,200) :: qr
            real*8 dimension(200,200) :: qi
            real*8 dimension(200,200) :: rgqr
            real*8 dimension(200,200) :: rgqi
            real*8 dimension(200,200) :: tr1
            real*8 dimension(200,200) :: ti1
            common /ctt/ qr,qi,rgqr,rgqi
            common /ct/ tr1,ti1
        end subroutine tt
        subroutine gsp(nmax,csca,lam,alf1,alf2,alf3,alf4,bet1,bet2,lmax,errcode) ! in :_tmrandom:tmd.lp.f
            integer :: nmax
            real*8 :: csca
            real*8 :: lam
            real*8 dimension(201) :: alf1
            real*8 dimension(201) :: alf2
            real*8 dimension(201) :: alf3
            real*8 dimension(201) :: alf4
            real*8 dimension(201) :: bet1
            real*8 dimension(201) :: bet2
            integer :: lmax
            integer :: errcode
            real*8 dimension(900) :: ssign
            real*4 dimension(161,161,80) :: b1r
            real*4 dimension(161,161,80) :: b1i
            real*4 dimension(161,161,80) :: b2r
            real*4 dimension(161,161,80) :: b2i
            real*4 dimension(81,80,80) :: tr11
            real*4 dimension(81,80,80) :: tr12
            real*4 dimension(81,80,80) :: tr21
            real*4 dimension(81,80,80) :: tr22
            real*4 dimension(81,80,80) :: ti11
            real*4 dimension(81,80,80) :: ti12
            real*4 dimension(81,80,80) :: ti21
            real*4 dimension(81,80,80) :: ti22
            common /ss/ ssign
            common /cbess/ b1r,b1i,b2r,b2i
            common /tmat/ tr11,tr12,tr21,tr22,ti11,ti12,ti21,ti22
        end subroutine gsp
        subroutine fact ! in :_tmrandom:tmd.lp.f
            real*8 dimension(900) :: f
            common /fac/ f
        end subroutine fact
        subroutine signum ! in :_tmrandom:tmd.lp.f
            real*8 dimension(900) :: ssign
            common /ss/ ssign
        end subroutine signum
        subroutine ccg(n,n1,nmax,k1,k2,gg,errcode) ! in :_tmrandom:tmd.lp.f
            integer :: n
            integer :: n1
            integer :: nmax
            integer :: k1
            integer :: k2
            real*8 dimension(161,81) :: gg
            integer :: errcode
        end subroutine ccg
        subroutine direct(n,m,n1,m1,nn,mm,c) ! in :_tmrandom:tmd.lp.f
            integer :: n
            integer :: m
            integer :: n1
            integer :: m1
            integer :: nn
            integer :: mm
            real*8 :: c
            real*8 dimension(900) :: f
            common /fac/ f
        end subroutine direct
        subroutine ccgin(n,n1,m,mm,g,errcode) ! in :_tmrandom:tmd.lp.f
            integer :: n
            integer :: n1
            integer :: m
            integer :: mm
            real*8 :: g
            integer :: errcode
            real*8 dimension(900) :: ssign
            real*8 dimension(900) :: f
            common /ss/ ssign
            common /fac/ f
        end subroutine ccgin
        subroutine sarea(d,rat) ! in :_tmrandom:tmd.lp.f
            real*8 :: d
            real*8 :: rat
        end subroutine sarea
        subroutine surfch(n,e,rat) ! in :_tmrandom:tmd.lp.f
            integer :: n
            real*8 :: e
            real*8 :: rat
        end subroutine surfch
        subroutine sareac(eps,rat) ! in :_tmrandom:tmd.lp.f
            real*8 :: eps
            real*8 :: rat
        end subroutine sareac
        subroutine power(a,b,r1,r2) ! in :_tmrandom:tmd.lp.f
            real*8 :: a
            real*8 :: b
            real*8 :: r1
            real*8 :: r2
            real*8 :: aa
            real*8 :: bb
            common aa,bb
        end subroutine power
        function zeroin(ax,bx,f,tol) ! in :_tmrandom:tmd.lp.f
            real*8 :: ax
            real*8 :: bx
            real*8 :: f
            real*8 :: tol
            double precision :: zeroin
        end function zeroin
        function f(r1) ! in :_tmrandom:tmd.lp.f
            real*8 :: r1
            real*8 :: a
            real*8 :: b
            double precision :: f
            common a,b
        end function f
        subroutine gauss(n,ind1,ind2,z,w) ! in :_tmrandom:tmd.lp.f
            integer optional,check(len(z)>=n),depend(z) :: n=len(z)
            integer :: ind1
            integer :: ind2
            real*8 dimension(n) :: z
            real*8 dimension(n),depend(n) :: w
        end subroutine gauss
        subroutine distrb(nnk,yy,wy,ndistr,aa,bb,gam,r1,r2,reff,veff,pi) ! in :_tmrandom:tmd.lp.f
            integer optional,check(len(yy)>=nnk),depend(yy) :: nnk=len(yy)
            real*8 dimension(nnk) :: yy
            real*8 dimension(nnk),depend(nnk) :: wy
            integer :: ndistr
            real*8 :: aa
            real*8 :: bb
            real*8 :: gam
            real*8 :: r1
            real*8 :: r2
            real*8 :: reff
            real*8 :: veff
            real*8 :: pi
        end subroutine distrb
        subroutine hovenr(l1,a1,a2,a3,a4,b1,b2) ! in :_tmrandom:tmd.lp.f
            integer optional,check(len(a1)>=l1),depend(a1) :: l1=len(a1)
            real*8 dimension(l1) :: a1
            real*8 dimension(l1),depend(l1) :: a2
            real*8 dimension(l1),depend(l1) :: a3
            real*8 dimension(l1),depend(l1) :: a4
            real*8 dimension(l1),depend(l1) :: b1
            real*8 dimension(l1),depend(l1) :: b2
        end subroutine hovenr
        subroutine matr(a1,a2,a3,a4,b1,b2,lmax,npna) ! in :_tmrandom:tmd.lp.f
            real*8 dimension(201) :: a1
            real*8 dimension(201) :: a2
            real*8 dimension(201) :: a3
            real*8 dimension(201) :: a4
            real*8 dimension(201) :: b1
            real*8 dimension(201) :: b2
            integer :: lmax
            integer :: npna
        end subroutine matr
    end interface 
end python module _tmrandom

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
